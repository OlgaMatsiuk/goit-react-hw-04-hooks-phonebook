{"version":3,"sources":["Components/Form/form.module.css","Components/Contacts/contacts.module.css","App.module.css","Components/Filter/filter.module.css","Components/Form/Form.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Form","text","submit","useState","id","name","setName","number","setNumber","InputId","uuidv4","handleChange","e","currentTarget","value","onSubmit","preventDefault","autoComplete","className","styles","phoneBookForm","htmlFor","formLabel","formInput","type","placeholder","onChange","pattern","title","required","formBtn","Contacts","list","onDeleteContact","map","listItem","contactName","contactBtn","onClick","Filter","filterLabel","filterInput","App","contacts","setContacts","filter","setFilter","useEffect","window","localStorage","setItem","JSON","stringify","contact","console","log","filteredContacts","useMemo","normalizedFilter","toLowerCase","includes","container","data","find","alert","prevState","contactList","contactNum","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a351965.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookForm\":\"form_phoneBookForm__1zgc-\",\"formLabel\":\"form_formLabel__-0jNC\",\"formInput\":\"form_formInput__3xNkx\",\"formBtn\":\"form_formBtn__1jWUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__1Wjqz\",\"listItem\":\"contacts_listItem__3QiY3\",\"contactName\":\"contacts_contactName__3C971\",\"contactBtn\":\"contacts_contactBtn__364ik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3YOWV\",\"contactList\":\"App_contactList__2c0GU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__qjDV4\",\"filterInput\":\"filter_filterInput__2JU2c\"};","// import React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport styles from './form.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function Form ({ text, submit }) {\r\n    const [id] = useState(0);\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    // state = {\r\n    //     id: 0,\r\n    //     name: '',\r\n    //     number: ''\r\n    // }\r\n\r\n    const InputId = uuidv4();\r\n\r\n    const handleChange = e => {\r\n        const { name, value} = e.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        submit({id, name, number});\r\n        setName('');\r\n        setNumber('');\r\n       \r\n\r\n        // this.reset();      \r\n    }\r\n\r\n    \r\n        return (\r\n        <>\r\n        <h1>{text}</h1>\r\n        \r\n        <form onSubmit={handleSubmit}  autoComplete=\"off\" className={styles.phoneBookForm}>\r\n            <label htmlFor={InputId} className={styles.formLabel}>Name</label>\r\n                <input\r\n                    className={styles.formInput}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    id={InputId}\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            <label htmlFor={InputId} className={styles.formLabel}>Number</label>\r\n                <input\r\n                    className={styles.formInput}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    placeholder=\"Enter number\"\r\n                    id={InputId}\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            \r\n          <button type=\"submit\" className={styles.formBtn}>Add contact</button>          \r\n        </form>\r\n        </>\r\n        )\r\n           \r\n}\r\n\r\n// export default Form;","  \r\nimport React from 'react';\r\nimport styles from './contacts.module.css'\r\n\r\nconst Contacts = ({ list,  onDeleteContact}) => (\r\n    <>\r\n        \r\n        <ul className={styles.list}>\r\n            {list.map(({number, name}) => (\r\n                <li key={number} className={styles.listItem}>\r\n                    <p className={styles.contactName}>{name}: {number}</p>\r\n                    <button className={styles.contactBtn} onClick={() => onDeleteContact(number)}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </>\r\n);\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport styles from './filter.module.css'\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label htmlFor=\"filter\" className={styles.filterLabel}>Find contacts by name\r\n        <input\r\n            className={styles.filterInput}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n            id=\"filter\"\r\n        />\r\n    </label>\r\n);\r\n\r\nexport default Filter;","  \nimport { useState,useMemo, useEffect } from \"react\";\nimport styles from './App.module.css';\nimport Form from './Components/Form/Form';\nimport Contacts from './Components/Contacts/Contacts';\nimport Filter from './Components/Filter/Filter';\n\n// class App extends  {\n//   state = {\n//     contacts: [\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n//   ],\n//     filter: '',\n//   }\n\nconst App = () => {\n  const [contacts, setContacts] = useState(\n   [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ]\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n  contacts.map((contact) => console.log(contact.name));\n\n  // contacts.map((contact) => console.log(contact.name));\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsetContacts = JSON.parse(contacts);\n\n  //   if (parsetContacts) {\n  //     this.setState({ contacts: parsetContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const nextContact = this.state.contacts;\n  //   const prevContact = prevState.contacts;\n\n  //   if (nextContact !== prevContact) {\n  //     localStorage.setItem('contacts', JSON.stringify(nextContact));\n  //   }\n  // }\n\n  const formSubmit = data => {\n    const savedContacts  = contacts.find(contact =>\n      contact.name.toLowerCase() === data.name.toLowerCase());\n  \n      if (savedContacts) {\n        alert(data.name + ' is already in contacts.');\n        return;\n        }  \n      // this.setState(prevState => ({\n      //   contacts: [...prevState.contacts,data],\n      // }\n\n      // ))  \n      \n    setContacts(prevState=>[...prevState, data]);\n  };  \n  \n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n  // changeFilter = event => {\n  //   this.setState({ filter: event.currentTarget.value });\n  // }\n\n  const deleteContact = (contactNum) => {\n    setContacts(prevState =>\n    prevState.filter(contact => contact.number !== contactNum)\n    );\n  };\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    \n    return (\n      contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter))\n    );\n  }, [contacts, filter]);\n  // deleteContact = (number) => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.number !== number),\n  //   }))\n    \n  // }\n\n  \n    // const { contacts, filter } = this.state;\n    // const normalizedFilter = filter.toLowerCase();\n    // const filteredContacts = contacts.filter(contact =>\n    //   contact.name.toLowerCase().includes(normalizedFilter));\n   \n    return (\n      <div className={styles.container}>\n        <Form text=\"Phonebook\" submit={formSubmit} />\n        <h2 className={styles.contactList}>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter}/>\n        <Contacts list={filteredContacts} onDeleteContact={deleteContact}/>\n      </div>\n    );\n  \n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}